[tool:pytest]
testpaths = "sbpy" "docs"
astropy_header = true
minversion = 3.0
norecursedirs = build docs/_build
doctest_plus = enabled
text_file_format = rst
addopts = --doctest-rst -p no:warnings
remote_data_strict = True

[metadata]
description = A Python Module for Small-Body Planetary Astronomy
long_description = file: README.rst
author = sbpy team
author_email = msk@astro.umd.edu
license = BSD 3-Clause
license_file = LICENSE.rst
url = https://sbpy.org
edit_on_github = False
github_project = NASA-Planetary-Science/sbpy

[options]
zip_safe = False
packages = find:
install_requires =
    numpy>=1.13.0
    astropy>=3.0
    astropy-helpers
    matplotlib
    ads
    synphot
    astroquery>=0.4.1.dev0
python_requires = >=3.6
setup_requires = setuptools_scm

[options.extras_require]
all =
    scipy
    ginga
    photutils
test =
    pytest-astropy
docs =
    sphinx-astropy

[options.package_data]
* = *.txt, *.bib
sbpy.bib.tests = data/*
sbpy.data.tests = data/*
sbpy.units.tests = data/*

[pycodestyle]
select = E101,E111,E112,E113,E124,E201,E202,E203,E211,E221,E225,E231,E241,E251,E261,E265,E271,E272,E301,E302,E303,E305,E502,E703,E711,E712,E714,E722,E901,E902,W191,W291,W292,W293,W391

# Ignore following error codes:
# E402: module level import not at top of file
# E741: single-letter small-caps
# E226: missing whitespace around arithmetic operator
# E501: line too long
ignore = E402,E741,E226,E501

# Excluding files that are directly copied from the package template or
# generated
exclude = _astropy_init.py,version.py,ah_bootstrap.py

[coverage:run]
omit =
    sbpy/_astropy_init*
    sbpy/conftest.py
    sbpy/*setup_package*
    sbpy/tests/*
    sbpy/*/tests/*
    sbpy/extern/*
    sbpy/version*
    */sbpy/_astropy_init*
    */sbpy/conftest.py
    */sbpy/*setup_package*
    */sbpy/tests/*
    */sbpy/*/tests/*
    */sbpy/extern/*
    */sbpy/version*

[coverage:report]
exclude_lines =
    # Have to re-enable the standard pragma
    pragma: no cover
    # Don't complain about packages we have installed
    except ImportError
    # Don't complain if tests don't hit assertions
    raise AssertionError
    raise NotImplementedError
    # Don't complain about script hooks
    def main\(.*\):
    # Ignore branches that don't pertain to this version of Python
    pragma: py{ignore_python_version}
    # Don't complain about IPython completion helper
    def _ipython_key_completions_
